<?php

namespace Tests\Feature;

use App\Models\CastMember;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class CastMemberDbTest extends TestCase
{
    private $castmember;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $attr = [
            'name' => $this->faker->name,
            'description' => $this->faker->sentence,
            'type' => array_rand([CastMember::TYPE_ACTOR, CastMember::TYPE_DIRECTOR])
        ];

        $this->castmember = CastMember::create($attr);
    }

    /**
     * @test
     * @testdox Adding CastMember
     */
    public function testNewCastMember()
    {
        $this->assertDatabaseHas('cast_members', $this->castmember->getAttributes());

    }

    /**
     * @test
     * @testdox Updating CastMember
     */
    public function testUpdateCastMember()
    {

        $this->castmember->type = CastMember::TYPE_ACTOR;
        $this->castmember->description = null;
        $this->castmember->save();
        $this->assertNull($this->castmember->description);
        $this->assertDatabaseHas('cast_members', $this->castmember->getAttributes());
    }

    /**
     * @test
     * @testdox Showing CastMember
     */
    public function testShowCastMember()
    {

        self::assertDatabaseHas('cast_members', $this->castmember->getAttributes());
    }

    /**
     * @test
     * @testdox Removing CastMember
     */
    public function testDestroyCastMember()
    {
        $this->castmember->delete();
        $this->assertSoftDeleted('cast_members', $this->castmember->getAttributes());
    }
}
